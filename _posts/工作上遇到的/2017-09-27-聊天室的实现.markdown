---
title: 聊天室的实现
date: '2017-09-27 14:17:00'
categories: [
    work
]
layout: post
author: xy
---

1、简单介绍socket.io

Socket.IO是一个开源的WebSocket库，它通过Node.js实现WebSocket服务端，同时也提供客户端JS库。Socket.IO支持以事件为基础的实时双向通讯，它可以工作在任何平台、浏览器或移动设备。


客户端向服务器端发起socket请求，on是为了监听服务器信息，emit是为了请求

	客户端的
	io.connect(url) //客户端连接上服务器端
	socket.on  //客户端监听服务器端事件
	socket.emit  //客户端向服务器端发送数据
	socket.disconnect() //客户端断开链接

	服务器端的
	socket.on
	socket.emit
	socket.broadcast
	、、。。。。。

socket 、web socket、 sockert.io

	socket

	socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口(API)。

	Socket的出现只是使得程序员更方便地使用TCP/IP协议栈而已，是对TCP/IP协议的抽象，从而形成了我们知道的一些最基本的函数接口，比如create、listen、connect、accept、send、read和write等等。

	网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端成为一个socket。类似电话网，任何用户在通话前，必须占有一部电话机，相当于申请一个Socket，同时要知道对方的号码，对方也需要有一个固定的Socket，当向对方拨号呼叫，相当于发出连接请求，双方正式通话相当于连接成功。双方通话的过程，是一方向电话机发出信号和对方从电话机接收信号的过程，相当于向Socket发送数据和从Socket接收数据。通话结束后，一方挂电话机相当于关闭Socket，撤销连接。

	socket起源于Unix，而Unix/LINux的哲学就是：“一切皆文件”，socket是一种特殊的文件，socket的一些函数就是对其进行读写打开关闭的操作。
![socket通信图](/images/socket.png)

----

	WebSocket
	http是无状态的连接协议，为了支持客户端与服务器之间的交互，就需要通过cookie和session来保持状态。
	Websocket是一个持久化的协议，相对于HTTP这种非持久的协议来说。主流的Web端即时通讯方案大致有4种：传统Ajax短轮询、Comet技术、WebSocket技术、SSE（Server-sent Events）。
	WebSocket是HTML5的一种新通信协议，它实现了浏览器与服务器之间的双向通讯。

-----


	Socket.IO
	Socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。


-----

2、聊天室的几大功能实现

	(1)、如何通信
	(2)、在线客户列表+主播成员列表（加群退群的即时更新）
	(3)、禁言+ 引用内容 + @某某 +屏蔽展示
	(4)、打赏等其他的广播通知		