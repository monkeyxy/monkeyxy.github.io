---
title: 线程+进程
date: '2017-12-10 13:00:00'
categories: [
Internet
]
layout: post
author: xy
---

### 进程
    
对于操作系统而言，进程是核心的核心，所有操作系统执行任务都是以进程为单位的。每个任务（进程）被创建的时候，系统会为他分配储存空间等资源，然后再内核管理区为该进程创建管理节点，以便用来控制和调度该任务的执行（资源和cpu使用权均获得的情况下，启动进程的执行过程）。

对进程做一个简要的总结：<span style="font-weight:bold;color:#ac4142">进程是具有一定独立功能的程序关于某个数据集合的一次运行活动，进程是操作系统进行资源分配和调度的一个独立单元。</span>

### 线程

在执行一些细小的任务时，本身无需分配单独的资源，（多个任务共享同一组资源即可，如子进程可共享父进程的资源），进程的实现机制依然会繁琐的将资源分割，这样造成浪费还消耗时间，后来就有专门的实现多任务技术的————线程。

线程的总结：<span style="font-weight:bold;color:#ac4142">线程是进程上的一个实体。比进程更小的能独立运行的基本单位。</span>

### 线程和进程的联系
    
线程和进程的联系在于，同一个进程中可以有多个线程，线程是更加接近于执行体的概念。举个例子，操作系统==》工厂，产品==》进程，线程==》工人。一个工厂可以有多个产品，多个产品可以同时进行，一个产品有多个工人配合工作，同样可以同时进行。换言之，操作系统可以有多个进程同时进行，一个进程有多个线程运行。

>进程是资源分配的基本单位，线程是调度的基本单位

如何理解这句话呢？事实上，先线程和进程都可以被调度，只是线程是更小粒度的调度单位，也就是只要达到线程的水平就可以调度了，进程也是可以调度的。这句话强调的是操作系统在分配资源的时候对象必须是进程，它是不会给线程单独分配管理资源的。如果运行一个任务，想要获得资源，必须有进程，其他的任务可以以线程的身份进行，并且线程之间资源共享。
    
### 线程和进程的区别

* 1、调度。进程是作为资源拥有的基本单位，线程是作为cpu调度和分派的基本单位。线程又称为轻量级进程，是个进程一样拥有独立的执行控制，进程和线程的区别在于线程是没有独立的储存空间，而是在所属的进程中和其他线程共享一个储存空间，这使得同一进程中线程的切换不会引起昂贵的系统调度。
    
* 2、独立性。不同进程之间的独立性要高于同一个进程中不同线程的独立性。为了防止进程之间相互干扰和破坏，每个进程都拥有一个独立的地址空间和其他资源，不允许其他进程访问。而线程之间，为了提供线程之间的合作和提高并发性，他们之间是共享储存空间和资源的，每个线程是可以访问同一个进程内的其他线程，也可以被其他同个进程内的线程读写和清除。


 










